/**
 * Part of Windigo - Win32 API layer for Go
 * https://github.com/rodrigocfd/windigo
 * This library is released under the MIT license.
 */

package co

// DRAWITEMSTRUCT itemAction.
type ODA uint32

const (
	ODA_DRAWENTIRE ODA = 0x0001
	ODA_SELECT     ODA = 0x0002
	ODA_FOCUS      ODA = 0x0004
)

// DRAWITEMSTRUCT itemState.
type ODS uint32

const (
	ODS_SELECTED     ODS = 0x0001
	ODS_GRAYED       ODS = 0x0002
	ODS_DISABLED     ODS = 0x0004
	ODS_CHECKED      ODS = 0x0008
	ODS_FOCUS        ODS = 0x0010
	ODS_DEFAULT      ODS = 0x0020
	ODS_COMBOBOXEDIT ODS = 0x1000
	ODS_HOTLIGHT     ODS = 0x0040
	ODS_INACTIVE     ODS = 0x0080
	ODS_NOACCEL      ODS = 0x0100
	ODS_NOFOCUSRECT  ODS = 0x0200
)

// DELETEITEMSTRUCT CtlType.
type ODT uint32

const (
	ODT_MENU     ODT = 1
	ODT_LISTBOX  ODT = 2
	ODT_COMBOBOX ODT = 3
	ODT_BUTTON   ODT = 4
	ODT_STATIC   ODT = 5
)

// OPENFILENAME Flags.
type OFN uint32

const (
	OFN_READONLY             OFN = 0x00000001
	OFN_OVERWRITEPROMPT      OFN = 0x00000002
	OFN_HIDEREADONLY         OFN = 0x00000004
	OFN_NOCHANGEDIR          OFN = 0x00000008
	OFN_SHOWHELP             OFN = 0x00000010
	OFN_ENABLEHOOK           OFN = 0x00000020
	OFN_ENABLETEMPLATE       OFN = 0x00000040
	OFN_ENABLETEMPLATEHANDLE OFN = 0x00000080
	OFN_NOVALIDATE           OFN = 0x00000100
	OFN_ALLOWMULTISELECT     OFN = 0x00000200
	OFN_EXTENSIONDIFFERENT   OFN = 0x00000400
	OFN_PATHMUSTEXIST        OFN = 0x00000800
	OFN_FILEMUSTEXIST        OFN = 0x00001000
	OFN_CREATEPROMPT         OFN = 0x00002000
	OFN_SHAREAWARE           OFN = 0x00004000
	OFN_NOREADONLYRETURN     OFN = 0x00008000
	OFN_NOTESTFILECREATE     OFN = 0x00010000
	OFN_NONETWORKBUTTON      OFN = 0x00020000
	OFN_NOLONGNAMES          OFN = 0x00040000
	OFN_EXPLORER             OFN = 0x00080000
	OFN_NODEREFERENCELINKS   OFN = 0x00100000
	OFN_LONGNAMES            OFN = 0x00200000
	OFN_ENABLEINCLUDENOTIFY  OFN = 0x00400000
	OFN_ENABLESIZING         OFN = 0x00800000
	OFN_DONTADDTORECENT      OFN = 0x02000000
	OFN_FORCESHOWHIDDEN      OFN = 0x10000000
)

// OPENFILENAME FlagsEx.
type OFN_EX uint32

const (
	OFN_EX_NONE        OFN_EX = 0
	OFN_EX_NOPLACESBAR OFN_EX = 0x00000001
)

// CreateFileMapping() flProtect.
type PAGE uint32

const (
	PAGE_NONE                   PAGE = 0
	PAGE_NOACCESS               PAGE = 0x01
	PAGE_READONLY               PAGE = 0x02
	PAGE_READWRITE              PAGE = 0x04
	PAGE_WRITECOPY              PAGE = 0x08
	PAGE_EXECUTE                PAGE = 0x10
	PAGE_EXECUTE_READ           PAGE = 0x20
	PAGE_EXECUTE_READWRITE      PAGE = 0x40
	PAGE_EXECUTE_WRITECOPY      PAGE = 0x80
	PAGE_GUARD                  PAGE = 0x100
	PAGE_NOCACHE                PAGE = 0x200
	PAGE_WRITECOMBINE           PAGE = 0x400
	PAGE_ENCLAVE_THREAD_CONTROL PAGE = 0x80000000
	PAGE_REVERT_TO_FILE_MAP     PAGE = 0x80000000
	PAGE_TARGETS_NO_UPDATE      PAGE = 0x40000000
	PAGE_TARGETS_INVALID        PAGE = 0x40000000
	PAGE_ENCLAVE_UNVALIDATED    PAGE = 0x20000000
	PAGE_ENCLAVE_DECOMMIT       PAGE = 0x10000000
)

// ProgressBar state.
type PBST uint32

const (
	PBST_NORMAL PBST = 0x0001
	PBST_ERROR  PBST = 0x0002
	PBST_PAUSED PBST = 0x0003
)

// ProgressBar messages.
type PBM WM

const (
	PBM_SETRANGE    PBM = PBM(WM_USER + 1)
	PBM_SETPOS      PBM = PBM(WM_USER + 2)
	PBM_DELTAPOS    PBM = PBM(WM_USER + 3)
	PBM_SETSTEP     PBM = PBM(WM_USER + 4)
	PBM_STEPIT      PBM = PBM(WM_USER + 5)
	PBM_SETRANGE32  PBM = PBM(WM_USER + 6)
	PBM_GETRANGE    PBM = PBM(WM_USER + 7)
	PBM_GETPOS      PBM = PBM(WM_USER + 8)
	PBM_SETBARCOLOR PBM = PBM(WM_USER + 9)
	PBM_SETBKCOLOR  PBM = PBM(CCM_SETBKCOLOR)
	PBM_SETMARQUEE  PBM = PBM(WM_USER + 10)
	PBM_GETSTEP     PBM = PBM(WM_USER + 13)
	PBM_GETBKCOLOR  PBM = PBM(WM_USER + 14)
	PBM_GETBARCOLOR PBM = PBM(WM_USER + 15)
	PBM_SETSTATE    PBM = PBM(WM_USER + 16)
	PBM_GETSTATE    PBM = PBM(WM_USER + 17)
)

// ProgressBar styles.
type PBS WS

const (
	PBS_SMOOTH        PBS = 0x01
	PBS_VERTICAL      PBS = 0x04
	PBS_MARQUEE       PBS = 0x08
	PBS_SMOOTHREVERSE PBS = 0x10
)

// WM_POWERBROADCAST event.
type PBT uint32

const (
	PBT_APMQUERYSUSPEND       PBT = 0x0000
	PBT_APMQUERYSTANDBY       PBT = 0x0001
	PBT_APMQUERYSUSPENDFAILED PBT = 0x0002
	PBT_APMQUERYSTANDBYFAILED PBT = 0x0003
	PBT_APMSUSPEND            PBT = 0x0004
	PBT_APMSTANDBY            PBT = 0x0005
	PBT_APMRESUMECRITICAL     PBT = 0x0006
	PBT_APMRESUMESUSPEND      PBT = 0x0007
	PBT_APMRESUMESTANDBY      PBT = 0x0008
	PBT_APMBATTERYLOW         PBT = 0x0009
	PBT_APMPOWERSTATUSCHANGE  PBT = 0x000a
	PBT_APMOEMEVENT           PBT = 0x000b
	PBT_APMRESUMEAUTOMATIC    PBT = 0x0012
	PBT_POWERSETTINGCHANGE    PBT = 0x8013
)

// SetPolyFillMode() mode; originally has no prefix.
type POLYF int32

const (
	POLYF_ALTERNATE POLYF = 1
	POLYF_WINDING   POLYF = 2
)

// WM_PRINT drawing options.
type PRF uint32

const (
	PRF_CHECKVISIBLE PRF = 0x00000001
	PRF_NONCLIENT    PRF = 0x00000002
	PRF_CLIENT       PRF = 0x00000004
	PRF_ERASEBKGND   PRF = 0x00000008
	PRF_CHILDREN     PRF = 0x00000010
	PRF_OWNED        PRF = 0x00000020
)

// CreateProcess() dwCreationFlags.
type PROC uint32

const (
	PROC_DEBUG_PROCESS           PROC = 0x00000001
	PROC_DEBUG_ONLY_THIS_PROCESS PROC = 0x00000002
	PROC_CREATE_SUSPENDED        PROC = 0x00000004
	PROC_DETACHED_PROCESS        PROC = 0x00000008

	PROC_CREATE_NEW_CONSOLE    PROC = 0x00000010
	PROC_NORMAL_PRIORITY_CLASS PROC = 0x00000020
	PROC_IDLE_PRIORITY_CLASS   PROC = 0x00000040
	PROC_HIGH_PRIORITY_CLASS   PROC = 0x00000080

	PROC_REALTIME_PRIORITY_CLASS    PROC = 0x00000100
	PROC_CREATE_NEW_PROCESS_GROUP   PROC = 0x00000200
	PROC_CREATE_UNICODE_ENVIRONMENT PROC = 0x00000400
	PROC_CREATE_SEPARATE_WOW_VDM    PROC = 0x00000800

	PROC_CREATE_SHARED_WOW_VDM       PROC = 0x00001000
	PROC_CREATE_FORCEDOS             PROC = 0x00002000
	PROC_BELOW_NORMAL_PRIORITY_CLASS PROC = 0x00004000
	PROC_ABOVE_NORMAL_PRIORITY_CLASS PROC = 0x00008000

	PROC_INHERIT_PARENT_AFFINITY      PROC = 0x00010000
	PROC_INHERIT_CALLER_PRIORITY      PROC = 0x00020000
	PROC_CREATE_PROTECTED_PROCESS     PROC = 0x00040000
	PROC_EXTENDED_STARTUPINFO_PRESENT PROC = 0x00080000

	PROC_PROCESS_MODE_BACKGROUND_BEGIN PROC = 0x00100000
	PROC_PROCESS_MODE_BACKGROUND_END   PROC = 0x00200000
	PROC_CREATE_SECURE_PROCESS         PROC = 0x00400000

	PROC_CREATE_BREAKAWAY_FROM_JOB        PROC = 0x01000000
	PROC_CREATE_PRESERVE_CODE_AUTHZ_LEVEL PROC = 0x02000000
	PROC_CREATE_DEFAULT_ERROR_MODE        PROC = 0x04000000
	PROC_CREATE_NO_WINDOW                 PROC = 0x08000000

	PROC_PROFILE_USER                 PROC = 0x10000000
	PROC_PROFILE_KERNEL               PROC = 0x20000000
	PROC_PROFILE_SERVER               PROC = 0x40000000
	PROC_CREATE_IGNORE_SYSTEM_DEFAULT PROC = 0x80000000
)

// PolyDraw() aj.
type PT uint8

const (
	PT_CLOSEFIGURE PT = 0x01
	PT_LINETO      PT = 0x02
	PT_BEZIERTO    PT = 0x04
	PT_MOVETO      PT = 0x06
)

// Rebar messages.
type RB WM

const (
	RB_DELETEBAND       RB = RB(WM_USER + 2)
	RB_GETBARINFO       RB = RB(WM_USER + 3)
	RB_SETBARINFO       RB = RB(WM_USER + 4)
	RB_SETPARENT        RB = RB(WM_USER + 7)
	RB_HITTEST          RB = RB(WM_USER + 8)
	RB_GETRECT          RB = RB(WM_USER + 9)
	RB_INSERTBAND       RB = RB(WM_USER + 10)
	RB_SETBANDINFO      RB = RB(WM_USER + 11)
	RB_GETBANDCOUNT     RB = RB(WM_USER + 12)
	RB_GETROWCOUNT      RB = RB(WM_USER + 13)
	RB_GETROWHEIGHT     RB = RB(WM_USER + 14)
	RB_IDTOINDEX        RB = RB(WM_USER + 16)
	RB_GETTOOLTIPS      RB = RB(WM_USER + 17)
	RB_SETTOOLTIPS      RB = RB(WM_USER + 18)
	RB_SETBKCOLOR       RB = RB(WM_USER + 19)
	RB_GETBKCOLOR       RB = RB(WM_USER + 20)
	RB_SETTEXTCOLOR     RB = RB(WM_USER + 21)
	RB_GETTEXTCOLOR     RB = RB(WM_USER + 22)
	RB_SIZETORECT       RB = RB(WM_USER + 23)
	RB_BEGINDRAG        RB = RB(WM_USER + 24)
	RB_ENDDRAG          RB = RB(WM_USER + 25)
	RB_DRAGMOVE         RB = RB(WM_USER + 26)
	RB_GETBARHEIGHT     RB = RB(WM_USER + 27)
	RB_GETBANDINFO      RB = RB(WM_USER + 28)
	RB_MINIMIZEBAND     RB = RB(WM_USER + 30)
	RB_MAXIMIZEBAND     RB = RB(WM_USER + 31)
	RB_GETDROPTARGET    RB = RB(CCM_GETDROPTARGET)
	RB_GETBANDBORDERS   RB = RB(WM_USER + 34)
	RB_SHOWBAND         RB = RB(WM_USER + 35)
	RB_SETPALETTE       RB = RB(WM_USER + 37)
	RB_GETPALETTE       RB = RB(WM_USER + 38)
	RB_MOVEBAND         RB = RB(WM_USER + 39)
	RB_SETUNICODEFORMAT RB = RB(CCM_SETUNICODEFORMAT)
	RB_GETUNICODEFORMAT RB = RB(CCM_GETUNICODEFORMAT)
	RB_GETBANDMARGINS   RB = RB(WM_USER + 40)
	RB_SETWINDOWTHEME   RB = RB(CCM_SETWINDOWTHEME)
	RB_SETEXTENDEDSTYLE RB = RB(WM_USER + 41)
	RB_GETEXTENDEDSTYLE RB = RB(WM_USER + 42)
	RB_PUSHCHEVRON      RB = RB(WM_USER + 43)
	RB_SETBANDWIDTH     RB = RB(WM_USER + 44)
)

// Rebar notifications.
type RBN NM

const (
	_RBN_FIRST RBN = -831

	RBN_HEIGHTCHANGE  RBN = _RBN_FIRST - 0
	RBN_GETOBJECT     RBN = _RBN_FIRST - 1
	RBN_LAYOUTCHANGED RBN = _RBN_FIRST - 2
	RBN_AUTOSIZE      RBN = _RBN_FIRST - 3
	RBN_BEGINDRAG     RBN = _RBN_FIRST - 4
	RBN_ENDDRAG       RBN = _RBN_FIRST - 5
	RBN_DELETINGBAND  RBN = _RBN_FIRST - 6
	RBN_DELETEDBAND   RBN = _RBN_FIRST - 7
	RBN_CHILDSIZE     RBN = _RBN_FIRST - 8
	RBN_CHEVRONPUSHED RBN = _RBN_FIRST - 10
	RBN_SPLITTERDRAG  RBN = _RBN_FIRST - 11
	RBN_MINMAX        RBN = _RBN_FIRST - 21
	RBN_AUTOBREAK     RBN = _RBN_FIRST - 22
)

// RegQueryValueEx() lpType.
type REG uint32

const (
	REG_NONE                       REG = 0 // No value type
	REG_SZ                         REG = 1 // Unicode nul terminated string
	REG_EXPAND_SZ                  REG = 2 // Unicode nul terminated string (with environment variable references)
	REG_BINARY                     REG = 3 // Free form binary
	REG_DWORD                      REG = 4 // 32-bit number
	REG_DWORD_LITTLE_ENDIAN        REG = 4 // 32-bit number (same as REG_DWORD)
	REG_DWORD_BIG_ENDIAN           REG = 5 // 32-bit number
	REG_LINK                       REG = 6 // Symbolic Link (unicode)
	REG_MULTI_SZ                   REG = 7 // Multiple Unicode strings
	REG_RESOURCE_LIST              REG = 8 // Resource list in the resource map
	REG_FULL_RESOURCE_DESCRIPTOR   REG = 9 // Resource list in the hardware description
	REG_RESOURCE_REQUIREMENTS_LIST REG = 10
	REG_QWORD                      REG = 11 // 64-bit number
	REG_QWORD_LITTLE_ENDIAN        REG = 11 // 64-bit number (same as REG_QWORD)
)

// RegOpenKeyEx() ulOptions.
type REG_OPTION uint32

const (
	REG_OPTION_NONE           REG_OPTION = 0
	REG_OPTION_RESERVED       REG_OPTION = 0x00000000
	REG_OPTION_NON_VOLATILE   REG_OPTION = 0x00000000
	REG_OPTION_VOLATILE       REG_OPTION = 0x00000001
	REG_OPTION_CREATE_LINK    REG_OPTION = 0x00000002
	REG_OPTION_BACKUP_RESTORE REG_OPTION = 0x00000004
	REG_OPTION_OPEN_LINK      REG_OPTION = 0x00000008
)

// CombineRgn() iMode.
type RGN int32

const (
	RGN_AND  RGN = 1
	RGN_OR   RGN = 2
	RGN_XOR  RGN = 3
	RGN_DIFF RGN = 4
	RGN_COPY RGN = 5
	RGN_MIN  RGN = RGN_AND
	RGN_MAX  RGN = RGN_COPY
)

// IMAGELISTDRAWPARAMS dwRop.
type ROP uint32

const (
	ROP_SRCCOPY        ROP = 0x00cc0020
	ROP_SRCPAINT       ROP = 0x00ee0086
	ROP_SRCAND         ROP = 0x008800c6
	ROP_SRCINVERT      ROP = 0x00660046
	ROP_SRCERASE       ROP = 0x00440328
	ROP_NOTSRCCOPY     ROP = 0x00330008
	ROP_NOTSRCERASE    ROP = 0x001100a6
	ROP_MERGECOPY      ROP = 0x00c000ca
	ROP_MERGEPAINT     ROP = 0x00bb0226
	ROP_PATCOPY        ROP = 0x00f00021
	ROP_PATPAINT       ROP = 0x00fb0a09
	ROP_PATINVERT      ROP = 0x005a0049
	ROP_DSTINVERT      ROP = 0x00550009
	ROP_BLACKNESS      ROP = 0x00000042
	ROP_WHITENESS      ROP = 0x00ff0062
	ROP_NOMIRRORBITMAP ROP = 0x80000000
	ROP_CAPTUREBLT     ROP = 0x40000000
)

// RegGetValue dwFlags.
type RRF uint32

const (
	RRF_RT_REG_NONE      RRF = 0x00000001
	RRF_RT_REG_SZ        RRF = 0x00000002
	RRF_RT_REG_EXPAND_SZ RRF = 0x00000004
	RRF_RT_REG_BINARY    RRF = 0x00000008
	RRF_RT_REG_DWORD     RRF = 0x00000010
	RRF_RT_REG_MULTI_SZ  RRF = 0x00000020
	RRF_RT_REG_QWORD     RRF = 0x00000040
	RRF_RT_DWORD         RRF = RRF_RT_REG_BINARY | RRF_RT_REG_DWORD
	RRF_RT_QWORD         RRF = RRF_RT_REG_BINARY | RRF_RT_REG_QWORD
	RRF_RT_ANY           RRF = 0x0000ffff

	RRF_SUBKEY_WOW6464KEY RRF = 0x00010000
	RRF_SUBKEY_WOW6432KEY RRF = 0x00020000
	RRF_WOW64_MASK        RRF = 0x00030000

	RRF_NOEXPAND      RRF = 0x10000000
	RRF_ZEROONFAILURE RRF = 0x20000000
)
