/**
 * Part of Wingows - Win32 API layer for Go
 * https://github.com/rodrigocfd/wingows
 * This library is released under the MIT license.
 */

package co

// GetAncestor() gaFlags.
type GA uint32

const (
	GA_PARENT    GA = 1
	GA_ROOT      GA = 2
	GA_ROOTOWNER GA = 3
)

// GetDeviceCaps() index; originally has no prefix.
type GDC int32

const (
	GDC_DRIVERVERSION   GDC = 0
	GDC_TECHNOLOGY      GDC = 2
	GDC_HORZSIZE        GDC = 4
	GDC_VERTSIZE        GDC = 6
	GDC_HORZRES         GDC = 8
	GDC_VERTRES         GDC = 10
	GDC_BITSPIXEL       GDC = 12
	GDC_PLANES          GDC = 14
	GDC_NUMBRUSHES      GDC = 16
	GDC_NUMPENS         GDC = 18
	GDC_NUMMARKERS      GDC = 20
	GDC_NUMFONTS        GDC = 22
	GDC_NUMCOLORS       GDC = 24
	GDC_PDEVICESIZE     GDC = 26
	GDC_CURVECAPS       GDC = 28
	GDC_LINECAPS        GDC = 30
	GDC_POLYGONALCAPS   GDC = 32
	GDC_TEXTCAPS        GDC = 34
	GDC_CLIPCAPS        GDC = 36
	GDC_RASTERCAPS      GDC = 38
	GDC_ASPECTX         GDC = 40
	GDC_ASPECTY         GDC = 42
	GDC_ASPECTXY        GDC = 44
	GDC_LOGPIXELSX      GDC = 88
	GDC_LOGPIXELSY      GDC = 90
	GDC_SIZEPALETTE     GDC = 104
	GDC_NUMRESERVED     GDC = 106
	GDC_COLORRES        GDC = 108
	GDC_PHYSICALWIDTH   GDC = 110
	GDC_PHYSICALHEIGHT  GDC = 111
	GDC_PHYSICALOFFSETX GDC = 112
	GDC_PHYSICALOFFSETY GDC = 113
	GDC_SCALINGFACTORX  GDC = 114
	GDC_SCALINGFACTORY  GDC = 115
	GDC_VREFRESH        GDC = 116
	GDC_DESKTOPVERTRES  GDC = 117
	GDC_DESKTOPHORZRES  GDC = 118
	GDC_BLTALIGNMENT    GDC = 119
	GDC_SHADEBLENDCAPS  GDC = 120
	GDC_COLORMGMTCAPS   GDC = 121
)

// DTM_SETSYSTEMTIME action.
type GDT uint32

const (
	GDT_VALID GDT = 0
	GDT_NONE  GDT = 1
)

// CreateFile() dwDesiredAccess.
type GENERIC uint32

const (
	GENERIC_READ    GENERIC = 0x80000000
	GENERIC_WRITE   GENERIC = 0x40000000
	GENERIC_EXECUTE GENERIC = 0x20000000
	GENERIC_ALL     GENERIC = 0x10000000
)

// GetMenuDefaultItem() gmdiFlags.
type GMDI uint32

const (
	GMDI_USEDISABLED  GMDI = 0x0001
	GMDI_GOINTOPOPUPS GMDI = 0x0002
)

// GetWindow() uCmd.
type GW uint32

const (
	GW_HWNDFIRST    GW = 0
	GW_HWNDLAST     GW = 1
	GW_HWNDNEXT     GW = 2
	GW_HWNDPREV     GW = 3
	GW_OWNER        GW = 4
	GW_CHILD        GW = 5
	GW_ENABLEDPOPUP GW = 6
	GW_MAX          GW = 6
)

// Get/SetWindowLongPtr() nIndex.
type GWLP int32

const (
	GWLP_STYLE      GWLP = -16
	GWLP_EXSTYLE    GWLP = -20
	GWLP_WNDPROC    GWLP = -4
	GWLP_HINSTANCE  GWLP = -6
	GWLP_HWNDPARENT GWLP = -8
	GWLP_USERDATA   GWLP = -21
	GWLP_ID         GWLP = -12
)

// SetWindowsHookEx() callback hook codes.
type HC int32

const (
	HC_ACTION      HC = 0
	HC_GETNEXT     HC = 1
	HC_SKIP        HC = 2
	HC_NOREMOVE    HC = 3
	HC_NOREM       HC = HC_NOREMOVE
	HC_SYSMODALON  HC = 4
	HC_SYSMODALOFF HC = 5
)

// SetWindowsHookEx() callback CBT hook codes.
type HCBT int32

const (
	HCBT_MOVESIZE     HCBT = 0
	HCBT_MINMAX       HCBT = 1
	HCBT_QS           HCBT = 2
	HCBT_CREATEWND    HCBT = 3
	HCBT_DESTROYWND   HCBT = 4
	HCBT_ACTIVATE     HCBT = 5
	HCBT_CLICKSKIPPED HCBT = 6
	HCBT_KEYSKIPPED   HCBT = 7
	HCBT_SYSCOMMAND   HCBT = 8
	HCBT_SETFOCUS     HCBT = 9
)

// HDITEM fmt.
type HDF int32

const (
	HDF_LEFT            HDF = 0x0
	HDF_RIGHT           HDF = 0x1
	HDF_CENTER          HDF = 0x2
	HDF_JUSTIFYMASK     HDF = 0x3
	HDF_RTLREADING      HDF = 0x4
	HDF_OWNERDRAW       HDF = 0x8000
	HDF_STRING          HDF = 0x4000
	HDF_BITMAP          HDF = 0x2000
	HDF_BITMAP_ON_RIGHT HDF = 0x1000
	HDF_IMAGE           HDF = 0x800
	HDF_SORTUP          HDF = 0x400
	HDF_SORTDOWN        HDF = 0x200
	HDF_CHECKBOX        HDF = 0x40
	HDF_CHECKED         HDF = 0x80
	HDF_FIXEDWIDTH      HDF = 0x100
	HDF_SPLITBUTTON     HDF = 0x1000000
)

// HDITEM type.
type HDFT uint32

const (
	HDFT_ISSTRING   HDFT = 0x0
	HDFT_ISNUMBER   HDFT = 0x1
	HDFT_ISDATE     HDFT = 0x2
	HDFT_HASNOVALUE HDFT = 0x8000
)

// HDITEM, NMHDDISPINFO mask.
type HDI uint32

const (
	HDI_WIDTH      HDI = 0x1
	HDI_HEIGHT     HDI = HDI_WIDTH
	HDI_TEXT       HDI = 0x2
	HDI_FORMAT     HDI = 0x4
	HDI_LPARAM     HDI = 0x8
	HDI_BITMAP     HDI = 0x10
	HDI_IMAGE      HDI = 0x20
	HDI_DI_SETITEM HDI = 0x40
	HDI_ORDER      HDI = 0x80
	HDI_FILTER     HDI = 0x100
	HDI_STATE      HDI = 0x0200
)

// HDITEM state.
type HDIS uint32

const (
	HDIS_FOCUSED HDIS = 0x1
)

// ListView header messages.
type HDM WM

const (
	_HDM_FIRST HDM = 0x1200

	HDM_GETITEMCOUNT HDM = _HDM_FIRST + 0
	HDM_INSERTITEM   HDM = _HDM_FIRST + 10
	HDM_DELETEITEM   HDM = _HDM_FIRST + 2
	HDM_GETITEM      HDM = _HDM_FIRST + 11
	HDM_SETITEM      HDM = _HDM_FIRST + 12
	HDM_LAYOUT       HDM = _HDM_FIRST + 5
)

// ListView header notifications, sent via WM_NOTIFY.
type HDN NM

const (
	_HDN_FIRST HDN = -300

	HDN_BEGINDRAG          HDN = _HDN_FIRST - 10
	HDN_ENDDRAG            HDN = _HDN_FIRST - 11
	HDN_FILTERCHANGE       HDN = _HDN_FIRST - 12
	HDN_FILTERBTNCLICK     HDN = _HDN_FIRST - 13
	HDN_BEGINFILTEREDIT    HDN = _HDN_FIRST - 14
	HDN_ENDFILTEREDIT      HDN = _HDN_FIRST - 15
	HDN_ITEMSTATEICONCLICK HDN = _HDN_FIRST - 16
	HDN_ITEMKEYDOWN        HDN = _HDN_FIRST - 17
	HDN_DROPDOWN           HDN = _HDN_FIRST - 18
	HDN_OVERFLOWCLICK      HDN = _HDN_FIRST - 19
	HDN_ITEMCHANGING       HDN = _HDN_FIRST - 20
	HDN_ITEMCHANGED        HDN = _HDN_FIRST - 21
	HDN_ITEMCLICK          HDN = _HDN_FIRST - 22
	HDN_ITEMDBLCLICK       HDN = _HDN_FIRST - 23
	HDN_DIVIDERDBLCLICK    HDN = _HDN_FIRST - 25
	HDN_BEGINTRACK         HDN = _HDN_FIRST - 26
	HDN_ENDTRACK           HDN = _HDN_FIRST - 27
	HDN_TRACK              HDN = _HDN_FIRST - 28
	HDN_GETDISPINFO        HDN = _HDN_FIRST - 29
)

// HELPINFO iContextType.
type HELPINFO int32

const (
	HELPINFO_WINDOW   HELPINFO = 0x0001
	HELPINFO_MENUITEM HELPINFO = 0x0002
)

// RegOpenKeyEx() hKey.
type HKEY uintptr

const (
	HKEY_CLASSES_ROOT                HKEY = 0x80000000
	HKEY_CURRENT_USER                HKEY = 0x80000001
	HKEY_LOCAL_MACHINE               HKEY = 0x80000002
	HKEY_USERS                       HKEY = 0x80000003
	HKEY_PERFORMANCE_DATA            HKEY = 0x80000004
	HKEY_PERFORMANCE_TEXT            HKEY = 0x80000050
	HKEY_PERFORMANCE_NLSTEXT         HKEY = 0x80000060
	HKEY_CURRENT_CONFIG              HKEY = 0x80000005
	HKEY_DYN_DATA                    HKEY = 0x80000006
	HKEY_CURRENT_USER_LOCAL_SETTINGS HKEY = 0x80000007
)

// WM_NCHITTEST return value.
type HT int32

const (
	HT_ERROR       HT = -2
	HT_TRANSPARENT HT = -1
	HT_NOWHERE     HT = 0
	HT_CLIENT      HT = 1
	HT_CAPTION     HT = 2
	HT_SYSMENU     HT = 3
	HT_GROWBOX     HT = 4
	HT_SIZE        HT = HT_GROWBOX
	HT_MENU        HT = 5
	HT_HSCROLL     HT = 6
	HT_VSCROLL     HT = 7
	HT_MINBUTTON   HT = 8
	HT_MAXBUTTON   HT = 9
	HT_LEFT        HT = 10
	HT_RIGHT       HT = 11
	HT_TOP         HT = 12
	HT_TOPLEFT     HT = 13
	HT_TOPRIGHT    HT = 14
	HT_BOTTOM      HT = 15
	HT_BOTTOMLEFT  HT = 16
	HT_BOTTOMRIGHT HT = 17
	HT_BORDER      HT = 18
	HT_REDUCE      HT = HT_MINBUTTON
	HT_ZOOM        HT = HT_MAXBUTTON
	HT_SIZEFIRST   HT = HT_LEFT
	HT_SIZELAST    HT = HT_BOTTOMRIGHT
	HT_OBJECT      HT = 19
	HT_CLOSE       HT = 20
	HT_HELP        HT = 21
)

// TVINSERTSTRUCT hInsertAfter.
type HTREEITEM uintptr

const (
	HTREEITEM_ROOT  HTREEITEM = 0x10000
	HTREEITEM_FIRST HTREEITEM = 0x0ffff
	HTREEITEM_LAST  HTREEITEM = 0x0fffe
	HTREEITEM_SORT  HTREEITEM = 0x0fffd
)

// LoadCursor() lpCursorName.
type IDC uintptr

const (
	IDC_ARROW       IDC = 32512
	IDC_IBEAM       IDC = 32513
	IDC_WAIT        IDC = 32514
	IDC_CROSS       IDC = 32515
	IDC_UPARROW     IDC = 32516
	IDC_SIZENWSE    IDC = 32642
	IDC_SIZENESW    IDC = 32643
	IDC_SIZEWE      IDC = 32644
	IDC_SIZENS      IDC = 32645
	IDC_SIZEALL     IDC = 32646
	IDC_NO          IDC = 32648
	IDC_HAND        IDC = 32649
	IDC_APPSTARTING IDC = 32650
	IDC_HELP        IDC = 32651
	IDC_PIN         IDC = 32671
	IDC_PERSON      IDC = 32672
)

// LoadIcon() lpIconName.
type IDI uintptr

const (
	IDI_APPLICATION IDI = 32512
	IDI_HAND        IDI = 32513
	IDI_QUESTION    IDI = 32514
	IDI_EXCLAMATION IDI = 32515
	IDI_ASTERISK    IDI = 32516
	IDI_WINLOGO     IDI = 32517
	IDI_SHIELD      IDI = 32518
	IDI_WARNING     IDI = IDI_EXCLAMATION
	IDI_ERROR       IDI = IDI_HAND
	IDI_INFORMATION IDI = IDI_ASTERISK
)

// WM_HOTKEY identifier.
type IDHOT int32

const (
	IDHOT_SNAPWINDOW  IDHOT = -1
	IDHOT_SNAPDESKTOP IDHOT = -2
)

// ImageList_Create() flags.
type ILC uint32

const (
	ILC_MASK             ILC = 0x00000001
	ILC_COLOR            ILC = 0x00000000
	ILC_COLORDDB         ILC = 0x000000fe
	ILC_COLOR4           ILC = 0x00000004
	ILC_COLOR8           ILC = 0x00000008
	ILC_COLOR16          ILC = 0x00000010
	ILC_COLOR24          ILC = 0x00000018
	ILC_COLOR32          ILC = 0x00000020
	ILC_PALETTE          ILC = 0x00000800
	ILC_MIRROR           ILC = 0x00002000
	ILC_PERITEMMIRROR    ILC = 0x00008000
	ILC_ORIGINALSIZE     ILC = 0x00010000
	ILC_HIGHQUALITYSCALE ILC = 0x00020000
)

// ImageList_Draw() flags.
type ILD uint32

const (
	ILD_NORMAL        ILD = 0x00000000
	ILD_TRANSPARENT   ILD = 0x00000001
	ILD_MASK          ILD = 0x00000010
	ILD_IMAGE         ILD = 0x00000020
	ILD_ROP           ILD = 0x00000040
	ILD_BLEND25       ILD = 0x00000002
	ILD_BLEND50       ILD = 0x00000004
	ILD_OVERLAYMASK   ILD = 0x00000f00
	ILD_PRESERVEALPHA ILD = 0x00001000
	ILD_SCALE         ILD = 0x00002000
	ILD_DPISCALE      ILD = 0x00004000
	ILD_ASYNC         ILD = 0x00008000
	ILD_SELECTED      ILD = ILD_BLEND50
	ILD_FOCUS         ILD = ILD_BLEND25
	ILD_BLEND         ILD = ILD_BLEND50
)

// ImageList state.
type ILS uint32

const (
	ILS_NORMAL   ILS = 0x00000000
	ILS_GLOW     ILS = 0x00000001
	ILS_SHADOW   ILS = 0x00000002
	ILS_SATURATE ILS = 0x00000004
	ILS_ALPHA    ILS = 0x00000008
)

// IP address control notifications, sent via WM_NOTIFY.
type IPN NM

const (
	_IPN_FIRST IPN = -860

	IPN_FIELDCHANGED IPN = _IPN_FIRST - 0
)
